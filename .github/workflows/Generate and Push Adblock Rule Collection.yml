name: Generate and Push Adblock Rule Collection

on:
  schedule:
    - cron: "*/20 * * * *"  # Run every 20 minutes
  push:
    branches:
      - main  # Ensure it runs on the main branch
  workflow_dispatch:  # Allow manual triggering of the workflow

jobs:
  generate_and_push:
    runs-on: ubuntu-latest  # Use the latest Ubuntu environment

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3  # Checkout the repository's code

    - name: Set up Python
      uses: actions/setup-python@v4  # Set up the Python environment
      with:
        python-version: '3.x'  # Specify Python version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip  # Upgrade pip
        pip install requests aiohttp  # Install requests and aiohttp libraries

    - name: Run Adblock Rule Generator
      run: python Adblock_Rule_Generator.py  # Run the script to generate the Adblock filter file

    - name: Commit and push changes
      id: push_changes  # Set step ID for later reference
      run: |
        # Configure git user information
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add ADBLOCK_RULE_COLLECTION.txt
        
        # Attempt to commit changes
        git commit -m "Update Adblock rules" || echo "No changes to commit"
        
        # Attempt to pull from the remote repository before pushing changes
        for attempt in {1..5}; do
          echo "Attempt $attempt: Pulling latest changes from remote..."
          if git pull --rebase; then
            echo "Pull successful."
          else
            echo "Pull failed, skipping pull and continuing to push."
          fi

          # Attempt to push changes
          if git push; then
            echo "Push successful."
            exit 0  # Exit the script
          else
            echo "Push failed, retrying in $((attempt * 10)) seconds..."
            sleep $((attempt * 10))  # Exponential backoff: first wait 10 seconds, then 20 seconds, etc.
          fi
        done
        
        echo "Push failed after multiple attempts, exiting with error."
        exit 1  # Exit with error if all attempts fail
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
